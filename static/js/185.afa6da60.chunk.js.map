{"version":3,"file":"static/js/185.afa6da60.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","components/Form/Form.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactsList/Contacts.module.css?3131","components/ContactsList/ContactsEl.jsx","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/UserMenu/UserMenu.module.css?1b0e","components/UserMenu/UserMenu.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectIsContacts = (state) => Boolean(state.contacts.items.length);\n\nexport const getVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (items, filter) => {\n    const filteredItems = items.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    return filteredItems;\n  }\n);\n","import React, { useState } from 'react';\nimport { addContacts } from '../../redux/contacts/contacts-operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\n\nlet initialForm = {\n  name: '',\n  number: '',\n};\n\nconst Form = () => {\n  const [newContact, setNewContact] = useState(initialForm);\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setNewContact(prev => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    )\n      return alert(`${newContact.name} is already in contacts.`);\n\n    dispatch(addContacts(newContact));\n\n    setNewContact({ name: '', number: '' });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className=\"form\">\n        <label className=\"label\">\n          <span className=\"inputTitle\">Name</span>\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={newContact.name}\n            onChange={handleChange}\n          />\n        </label>\n        <label className=\"label\">\n          <span className=\"inputTitle\">Number</span>\n          <input\n            className=\"input\"\n            type=\"tel\"\n            name=\"number\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={newContact.number}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className=\"button\">\n          Add\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n","import PropTypes from 'prop-types';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport { selectFilter  } from '../../redux/contacts/contacts-selectors';\n\n\nconst Filter = () => {\n  const value = useSelector(selectFilter );\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(changeFilter(value));\n  };\n  return (\n    <>\n      <label className=\"label\">\n        <span className=\"inputTitle\"> Filtr by Name </span>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"value\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={value}\n          onChange={handleChange}\n        />\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Contacts_item__-6wZN\",\"title\":\"Contacts_title__0V4-R\",\"wrapper\":\"Contacts_wrapper__2usHk\",\"name\":\"Contacts_name__nubNu\",\"number\":\"Contacts_number__Ft-cZ\"};","import { FaPhone } from 'react-icons/fa6';\nimport { FaUser } from \"react-icons/fa\";\n\n\nimport PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nconst ContactsEl = ({ name, number, onDeleteContact }) => {\n  return (\n    <>\n      <div>\n        <div className={s.wrapper}>\n        <FaUser size={16}/>\n          <p className={s.name}>{name}</p>\n        </div>\n        <div className={s.wrapper}>\n          <FaPhone size={16} />\n\n          <p className={s.number}>{number}</p>\n        </div>\n      </div>\n      <button className=\"button\" onClick={onDeleteContact}>\n        Delete\n      </button>\n    </>\n  );\n};\n\nContactsEl.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsEl;\n","import PropTypes from 'prop-types';\nimport ContactsEl from './ContactsEl';\nimport { removeContacts } from '../../redux/contacts/contacts-operations';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './Contacts.module.css';\n\nconst ContactsList = () => {\n  const contactsList = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  return contactsList.length ? (\n    <ul>\n      {contactsList.map(contacts => (\n        <li key={contacts.id} className={s.item}>\n          <ContactsEl\n            name={contacts.name}\n            number={contacts.number}\n            onDeleteContact={() => dispatch(removeContacts(contacts.id))}\n          />\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p>You have no contacts</p>\n  );\n};\n\nContactsList.propTypes = {\n  contactEl: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      onDeleteContact: PropTypes.func.isRequired,\n    })\n  ),\n};\n\nexport default ContactsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"UserMenu_wrap__LG+bf\",\"link\":\"UserMenu_link__d6eY9\",\"button\":\"UserMenu_button__310Zp\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors} from '../../redux/auth';\nimport operations from '../../redux/auth/auth-operations';\nimport s from './UserMenu.module.css';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n\n\n  return (\n    <div className={s.wrap}>\n      <span className={s.link}>Hi, {name}</span>\n      <button className={s.button} type=\"button\" onClick={() => dispatch(operations.logOut())}>\n        Log Out\n      </button>\n    </div>\n  );\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../redux/contacts/contacts-operations';\nimport { useEffect } from 'react';\n\nimport Form from '../components/Form/Form';\nimport Filter from '../components/Filter/Filter';\nimport ContactsList from '../components/ContactsList/ContactsList';\nimport UserMenu from '../components/UserMenu/UserMenu';\n\nimport { selectIsContacts } from '../redux/contacts/contacts-selectors';\n\nconst ContactsPage = () => {\n  const isContacts = useSelector(selectIsContacts);\n\n  const contacts = useSelector(state => state.contacts.items.length);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    !isContacts && dispatch(getContacts());\n  }, [dispatch, isContacts]);\n\n  return (\n    <>      \n      <UserMenu />\n      <h1 className=\"secondTitle\">Contacts</h1>\n      <Form className=\"form\"/>\n      <h2 className=\"secondTitle\">Contacts: {contacts}</h2>\n      <Filter />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectFilter","state","contacts","filter","selectIsContacts","Boolean","items","length","getVisibleContacts","createSelector","name","toLowerCase","includes","initialForm","number","useState","newContact","setNewContact","useSelector","dispatch","useDispatch","handleChange","e","target","value","prev","onSubmit","preventDefault","find","contact","alert","addContacts","className","type","title","required","onChange","pattern","changeFilter","onDeleteContact","s","size","onClick","contactsList","map","removeContacts","id","UserMenu","authSelectors","operations","isContacts","useEffect","getContacts"],"sourceRoot":""}
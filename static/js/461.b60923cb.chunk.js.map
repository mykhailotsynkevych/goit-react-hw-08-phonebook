{"version":3,"file":"static/js/461.b60923cb.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/contacts-selectors.js","components/Form/Form.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactsList/Contacts.module.css?3131","components/ContactsList/ContactsEl.jsx","components/ContactsList/ContactsList.jsx","pages/ConatctsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"inputTitle\":\"Form_inputTitle__K6rEU\",\"button\":\"Form_button__8NOIT\",\"title\":\"Form_title__5gZHF\",\"input\":\"Form_input__FTtTw\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContact = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContact, getFilter],\n  (items, filter) => {\n    const filteredItems = items.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    return filteredItems;\n  }\n);\n","import React, { useState  } from 'react';\nimport {addContacts} from '../../redux/contacts/contacts-operations';\nimport s from './Form.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\n\n\nlet initialForm = {\n  name: '',\n  number: '',\n};\n\nconst Form = () => {\n  const [form, setForm] = useState(initialForm);\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setForm(prev => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n    const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === form.name.toLowerCase()\n      )\n    )\n    return alert(`${form.name} is already in contacts.`);\n    dispatch(addContacts(form));\n\n    setForm({ name: '', number: ''});\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.form}>\n        <label className={s.form}>\n          <span className={s.inputTitle}> Name </span>\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={form.name}\n            onChange={handleChange}\n          />\n        </label>\n        <label className={s.form}>\n          <span className={s.inputTitle}> Number </span>\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={form.number}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    </>\n      );\n}\n        \nexport default Form;","// extracted by mini-css-extract-plugin\nexport default {\"filtr\":\"Filter_filtr__zijfV\",\"inputTitle\":\"Filter_inputTitle__8nejl\",\"input\":\"Filter_input__N7T3z\"};","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport { getFilter  } from '../../redux/contacts/contacts-selectors';\n\n\nconst Filter = () => {\n  const value = useSelector(getFilter );\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(changeFilter(value));\n  };\n  return (\n    <>\n      <label className={s.filtr}>\n        <span className={s.inputTitle}> Filtr by Name </span>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"value\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={value}\n          onChange={handleChange}\n        />\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Contacts_item__-6wZN\",\"wrap\":\"Contacts_wrap__XT6BN\",\"title\":\"Contacts_title__0V4-R\",\"discription\":\"Contacts_discription__k1e2x\",\"list\":\"Contacts_list__Gxku1\",\"button\":\"Contacts_button__QOKn6\"};","import PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nconst ContactsEl = ({name, number, onDeleteContact }) => {\n  return (\n    <div className={s.item}>\n      <p className={s.discription}>{name}</p>\n      <p className={s.discription}>{number}</p>\n      <button className={s.button} onClick={onDeleteContact}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContactsEl.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsEl;\n","import PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\nimport ContactsEl from './ContactsEl';\nimport { removeContacts } from '../../redux/contacts/contacts-operations';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\n\nimport React from 'react';\nimport {useSelector, useDispatch } from 'react-redux';\n\n\nconst ContactsList = () => {\n    const contactsList = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.wrap}>\n      <ol className={s.list}>\n        {contactsList.map((contacts) => (\n          <li key={contacts.id}>\n            <ContactsEl\n              name={contacts.name}\n              number={contacts.number}\n              onDeleteContact={() => dispatch(removeContacts(contacts.id))}\n            />\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nContactsList.propTypes = {\n  contactEl: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      onDeleteContact: PropTypes.func.isRequired,\n    })\n  ),\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/contacts-operations';\nimport { useEffect } from 'react';\n\nimport Form from '../../components/Form/Form';\nimport Filter from '../../components/Filter/Filter';\nimport ContactsList from '../../components/ContactsList/ContactsList';\n\nconst ContactsPage = () => {\n\n  const contacts = useSelector(state => state.contacts.items.length);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getContacts());\n      });\n\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts: {contacts}</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default ContactsPage;"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getFilter","state","contacts","filter","getVisibleContacts","items","toLowerCase","includes","initialForm","number","useState","form","setForm","useSelector","dispatch","useDispatch","handleChange","e","target","onSubmit","preventDefault","contact","alert","addContacts","className","s","type","pattern","title","required","onChange","changeFilter","onDeleteContact","onClick","contactsList","removeContacts","id","useEffect","getContacts"],"sourceRoot":""}
{"version":3,"file":"static/js/432.565e7b2e.chunk.js","mappings":"4MA0GA,UAlGqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAA8CN,EAAAA,EAAAA,WAAS,GAAvD,eAAOO,EAAP,KAAwBC,EAAxB,KACA,GAA8CR,EAAAA,EAAAA,WAAS,GAAvD,eAAOS,EAAP,KAAwBC,EAAxB,KAEMC,EAAgB,iBAEhBC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUZ,EAAoB,EAApBA,KAAMa,EAAc,EAAdA,MACzB,aAATb,GAEFO,EAAmBG,EAAcI,KAAKD,IACtCR,EAAYQ,IACM,UAATb,EACTG,EAASU,GACS,SAATb,GACTC,EAAQY,EAEX,EAUD,OACE,iCACE,eAAIE,UAAU,YAAd,gCACA,eAAIA,UAAU,cAAd,uBAEA,kBAAMC,SAbW,SAAAC,GACnBA,EAAEC,iBACFrB,EAASsB,EAAAA,GAAAA,SAAoB,CAAEnB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAC5CH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAOiCU,UAAU,OAAxC,WACE,mBAAOA,UAAU,QAAjB,WACE,iBAAMA,UAAU,aAAhB,mBACA,kBACEA,UAAU,QACVK,KAAK,OACLpB,KAAK,OACLqB,UAAQ,EACRR,MAAOb,EACPsB,SAAUX,QAGd,mBAAOI,UAAU,QAAjB,WACE,iBAAMA,UAAU,aAAhB,oBACA,kBACEA,UAAU,QACVK,KAAK,QACLpB,KAAK,QACLa,MAAOX,EACPoB,SAAUX,EACVU,UAAQ,QAGZ,mBAAON,UAAU,QAAjB,WACE,iBAAMA,UAAU,aAAhB,uBACA,iBAAKA,UAAU,uBAAf,UACGX,IACC,gBACEmB,QAAS,kBAAMd,GAAoBD,EAA1B,EACTO,UAAU,2BAFZ,SAMGP,GACC,SAAC,MAAD,CAAYgB,KAAM,MAElB,SAAC,MAAD,CAAUA,KAAM,QAKtB,kBACET,UAAS,UACPT,EAAkB,aAAe,eAD1B,UAGTc,KAAMZ,EAAkB,OAAS,WACjCR,KAAK,WACLa,MAAOT,EACPkB,SAAUX,QAGd,iBAAMI,UAAU,cAAhB,uCAIF,mBAAQK,KAAK,SAASL,UAAU,SAAhC,2BAMP,C","sources":["pages/RegisterPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { FaRegEye } from 'react-icons/fa';\nimport { FaEyeSlash } from 'react-icons/fa';\n\nimport operations from '../redux/auth/auth-operations';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isPasswordValid, setIsPasswordValid] = useState(false);\n  const [isPasswordShown, setIsPasswordShown] = useState(false);\n\n  const passwordRegex = /^[A-Za-z]{8,}$/;\n\n  const handleChange = ({ target: { name, value } }) => {\n    if (name === 'password') {\n      // Проверка валидности пароля при каждом изменении\n      setIsPasswordValid(passwordRegex.test(value));\n      setPassword(value);\n    } else if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'name') {\n      setName(value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(operations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <h1 className=\"mainTitle\">Registration Page</h1>\n      <h2 className=\"secondTitle\">Register</h2>\n\n      <form onSubmit={handleSubmit} className=\"form\">\n        <label className=\"label\">\n          <span className=\"inputTitle\">Name</span>\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"name\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label className=\"label\">\n          <span className=\"inputTitle\">Email</span>\n          <input\n            className=\"input\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <label className=\"label\">\n          <span className=\"inputTitle\">Password</span>\n          <div className=\"passwordInputWrapper\">\n            {password && (\n              <div\n                onClick={() => setIsPasswordShown(!isPasswordShown)}\n                className=\"togglePasswordVisibility\"\n              >\n \n\n                {isPasswordShown ? (\n                  <FaEyeSlash size={18} />\n                ) : (\n                  <FaRegEye size={18} />\n                )}\n\n              </div>\n            )}\n            <input\n              className={`${\n                isPasswordValid ? 'inputValid' : 'inputInvalid'\n              } input`}\n              type={isPasswordShown ? 'text' : 'password'}\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n            />\n          </div>\n          <span className=\"passworText\">\n            Min 8 characters long\n          </span>\n        </label>\n        <button type=\"submit\" className=\"button\">\n          Register\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","isPasswordValid","setIsPasswordValid","isPasswordShown","setIsPasswordShown","passwordRegex","handleChange","target","value","test","className","onSubmit","e","preventDefault","operations","type","required","onChange","onClick","size"],"sourceRoot":""}